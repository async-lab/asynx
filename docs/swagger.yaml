basePath: /api
definitions:
  controller.CreateTokenRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controller.RequestChangePassword:
    properties:
      password:
        type: string
    required:
    - password
    type: object
  controller.RequestModifyCategory:
    properties:
      category:
        type: string
    required:
    - category
    type: object
  controller.RequestModifyRole:
    properties:
      role:
        type: string
    required:
    - role
    type: object
  controller.RequestRegister:
    properties:
      category:
        type: string
      givenName:
        type: string
      mail:
        type: string
      role:
        type: string
      surName:
        type: string
      username:
        type: string
    required:
    - category
    - givenName
    - mail
    - role
    - surName
    - username
    type: object
  entity.User:
    properties:
      givenName:
        type: string
      mail:
        type: string
      surName:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: Asynx API 接口文档
  license:
    name: AGPL-v3.0
    url: https://raw.githubusercontent.com/async-lab/asynx/refs/heads/main/LICENSE
  title: Asynx API 文档
  version: "1.0"
paths:
  /hello:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Hello, AsyncLab
          schema:
            properties:
              data:
                type: string
            type: object
      summary: 打招呼
      tags:
      - index
  /tokens:
    post:
      consumes:
      - application/json
      description: 通过用户名和密码验证用户身份并生成访问令牌
      parameters:
      - description: 创建令牌请求
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.CreateTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 返回访问令牌
          schema:
            properties:
              data:
                type: string
            type: object
        "400":
          description: 请求参数错误
          schema:
            properties:
              data:
                type: string
            type: object
        "401":
          description: 用户名或密码错误
          schema:
            properties:
              data:
                type: string
            type: object
        "500":
          description: 服务器内部错误
          schema:
            properties:
              data:
                type: string
            type: object
      summary: 创建访问令牌
      tags:
      - tokens
  /users:
    get:
      consumes:
      - application/json
      description: 获取所有用户列表信息。需要 ADMIN 角色权限才能查看所有用户，DEFAULT 用户只能查看自己组织单元的用户。
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回用户列表
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/entity.User'
                type: array
            type: object
        "401":
          description: 未授权访问
          schema:
            properties:
              data:
                type: string
            type: object
        "403":
          description: 权限不足
          schema:
            properties:
              data:
                type: string
            type: object
        "500":
          description: 服务器内部错误
          schema:
            properties:
              data:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 获取用户列表
      tags:
      - users
    post:
      consumes:
      - application/json
      description: 创建新用户账号。需要 ADMIN 角色权限。
      parameters:
      - description: 注册用户请求
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.RequestRegister'
      produces:
      - application/json
      responses:
        "200":
          description: 成功注册用户，返回 'ok'
          schema:
            properties:
              data:
                type: string
            type: object
        "400":
          description: 请求参数错误
          schema:
            properties:
              data:
                type: string
            type: object
        "401":
          description: 未授权访问
          schema:
            properties:
              data:
                type: string
            type: object
        "403":
          description: 权限不足
          schema:
            properties:
              data:
                type: string
            type: object
        "409":
          description: 用户已存在
          schema:
            properties:
              data:
                type: string
            type: object
        "500":
          description: 服务器内部错误
          schema:
            properties:
              data:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 注册新用户
      tags:
      - users
  /users/{uid}:
    delete:
      consumes:
      - application/json
      description: 删除指定用户账号。需要 ADMIN 角色权限。不允许删除当前登录用户。
      parameters:
      - description: 用户ID，不能使用 'me'
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功删除用户，返回 'ok'
          schema:
            properties:
              data:
                type: string
            type: object
        "400":
          description: 请求参数错误
          schema:
            properties:
              data:
                type: string
            type: object
        "401":
          description: 未授权访问
          schema:
            properties:
              data:
                type: string
            type: object
        "403":
          description: 权限不足
          schema:
            properties:
              data:
                type: string
            type: object
        "404":
          description: 用户不存在
          schema:
            properties:
              data:
                type: string
            type: object
        "500":
          description: 服务器内部错误
          schema:
            properties:
              data:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 删除用户
      tags:
      - users
    get:
      consumes:
      - application/json
      description: 根据用户ID获取用户详细信息。需要 RESTRICTED 或更高权限。ADMIN 用户可以查看所有用户信息，DEFAULT 用户只能查看自己组织单元的用户信息，RESTRICTED
        用户只能查看自己的信息。
      parameters:
      - description: 用户ID，使用 'me' 可获取当前用户信息
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回用户信息
          schema:
            properties:
              data:
                $ref: '#/definitions/entity.User'
            type: object
        "400":
          description: 请求参数错误
          schema:
            properties:
              data:
                type: string
            type: object
        "401":
          description: 未授权访问
          schema:
            properties:
              data:
                type: string
            type: object
        "403":
          description: 权限不足
          schema:
            properties:
              data:
                type: string
            type: object
        "404":
          description: 用户不存在
          schema:
            properties:
              data:
                type: string
            type: object
        "500":
          description: 服务器内部错误
          schema:
            properties:
              data:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 获取用户信息
      tags:
      - users
  /users/{uid}/category:
    get:
      consumes:
      - application/json
      description: 获取指定用户的账号类型（system|member|external）。需要 RESTRICTED 或更高权限。ADMIN 用户可以查看所有用户信息，DEFAULT
        用户只能查看自己组织单元的用户信息，RESTRICTED 用户只能查看自己的信息。
      parameters:
      - description: 用户ID，使用 'me' 可获取当前用户类型
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '成功返回账号类型: system|member|external'
          schema:
            properties:
              data:
                type: string
            type: object
        "400":
          description: 请求参数错误
          schema:
            properties:
              data:
                type: string
            type: object
        "401":
          description: 未授权访问
          schema:
            properties:
              data:
                type: string
            type: object
        "403":
          description: 权限不足
          schema:
            properties:
              data:
                type: string
            type: object
        "404":
          description: 用户不存在
          schema:
            properties:
              data:
                type: string
            type: object
        "500":
          description: 服务器内部错误
          schema:
            properties:
              data:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 获取账号类型
      tags:
      - users
    put:
      consumes:
      - application/json
      description: 修改指定用户的账号类型。需要 ADMIN 角色权限。
      parameters:
      - description: 用户ID，不能使用 'me'
        in: path
        name: uid
        required: true
        type: string
      - description: |-
          修改账号类型请求
          system|member|external
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.RequestModifyCategory'
      produces:
      - application/json
      responses:
        "200":
          description: 成功修改账号类型，返回 'ok'
          schema:
            properties:
              data:
                type: string
            type: object
        "400":
          description: 请求参数错误
          schema:
            properties:
              data:
                type: string
            type: object
        "401":
          description: 未授权访问
          schema:
            properties:
              data:
                type: string
            type: object
        "403":
          description: 权限不足
          schema:
            properties:
              data:
                type: string
            type: object
        "404":
          description: 用户不存在
          schema:
            properties:
              data:
                type: string
            type: object
        "500":
          description: 服务器内部错误
          schema:
            properties:
              data:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 更改账号类型
      tags:
      - users
  /users/{uid}/password:
    put:
      consumes:
      - application/json
      description: 修改指定用户的密码。需要 RESTRICTED 或更高权限。ADMIN 用户可以修改任何用户密码，其他用户只能修改自己的密码。
      parameters:
      - description: 用户ID，使用 'me' 可修改当前用户密码
        in: path
        name: uid
        required: true
        type: string
      - description: 修改密码请求
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.RequestChangePassword'
      produces:
      - application/json
      responses:
        "200":
          description: 成功修改密码，返回 'ok'
          schema:
            properties:
              data:
                type: string
            type: object
        "400":
          description: 请求参数错误或密码不符合要求
          schema:
            properties:
              data:
                type: string
            type: object
        "401":
          description: 未授权访问
          schema:
            properties:
              data:
                type: string
            type: object
        "403":
          description: 权限不足
          schema:
            properties:
              data:
                type: string
            type: object
        "404":
          description: 用户不存在
          schema:
            properties:
              data:
                type: string
            type: object
        "500":
          description: 服务器内部错误
          schema:
            properties:
              data:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 修改密码
      tags:
      - users
  /users/{uid}/role:
    get:
      consumes:
      - application/json
      description: 获取指定用户的账号角色（admin|default|restricted）。需要 RESTRICTED 或更高权限。ADMIN
        用户可以查看所有用户信息，DEFAULT 用户只能查看自己组织单元的用户信息，RESTRICTED 用户只能查看自己的信息。
      parameters:
      - description: 用户ID，使用 'me' 可获取当前用户角色
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '成功返回账号角色: admin|default|restricted'
          schema:
            properties:
              data:
                type: string
            type: object
        "400":
          description: 请求参数错误
          schema:
            properties:
              data:
                type: string
            type: object
        "401":
          description: 未授权访问
          schema:
            properties:
              data:
                type: string
            type: object
        "403":
          description: 权限不足
          schema:
            properties:
              data:
                type: string
            type: object
        "500":
          description: 服务器内部错误
          schema:
            properties:
              data:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 获取账号角色
      tags:
      - users
    put:
      consumes:
      - application/json
      description: 修改指定用户的账号角色。需要 ADMIN 角色权限。非SYSTEM用户必须用学号作为用户名。
      parameters:
      - description: 用户ID，不能使用 'me'
        in: path
        name: uid
        required: true
        type: string
      - description: |-
          修改账号角色请求
          admin|default|restricted
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.RequestModifyRole'
      produces:
      - application/json
      responses:
        "200":
          description: 成功修改账号角色，返回 'ok'
          schema:
            properties:
              data:
                type: string
            type: object
        "400":
          description: 请求参数错误
          schema:
            properties:
              data:
                type: string
            type: object
        "401":
          description: 未授权访问
          schema:
            properties:
              data:
                type: string
            type: object
        "403":
          description: 权限不足
          schema:
            properties:
              data:
                type: string
            type: object
        "404":
          description: 用户不存在
          schema:
            properties:
              data:
                type: string
            type: object
        "500":
          description: 服务器内部错误
          schema:
            properties:
              data:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 更改账号角色
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: 输入 Bearer Token，格式为 "Bearer <token>"
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
